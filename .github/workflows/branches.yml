on:
  pull_request:
    branches:
      - production

jobs:
  edit-pr-title:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Edit PR title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_PREFIX: "[P]"
        if: ${{ !contains(github.event.pull_request.title, env.PR_PREFIX) }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          NEW_TITLE="${PR_PREFIX} ${{ github.event.pull_request.title }}"
          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER \
            -d "{\"title\":\"$NEW_TITLE\"}"

  create-staging-pr:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PR_PREFIX: "[S]"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Create and merge new branch
        id: create_pr
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git checkout staging
          git pull origin staging --rebase
          git checkout -b "staging-${{ github.head_ref }}" || git checkout "staging-${{ github.head_ref }}"
          git push origin "staging-${{ github.head_ref }}"|| true

          git merge "origin/${{ github.head_ref }}" || "echo MERGE_FAILED=true" >> $GITHUB_OUTPUT

          git push origin "staging-${{ github.head_ref }}" --force || true

          echo AUTOMATED_PR_TITLE="${{ github.event.pull_request.title }}" | sed "s/\[P\] //g" >> $GITHUB_ENV
          echo ${{env.AUTOMATED_PR_TITLE}}

      - name: Create pull request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "staging-${{ github.head_ref }}"
          destination_branch: "staging"
          pr_title: "${{ env.PR_PREFIX }} ${{env.AUTOMATED_PR_TITLE}}"
          pr_body: ${{ github.event.pull_request.body }}
          pr_label: "automated${{ steps.create_pr.outputs.MERGE_FAILED == 'true' && ', merge-conflict' || '' }}"
